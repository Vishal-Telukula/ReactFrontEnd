{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\teluk\\\\Music\\\\3-2\\\\FEWD\\\\Project\\\\re-cinema-movie-main\\\\src\\\\pages\\\\Home\\\\Main.jsx\",\n  _s = $RefreshSig$();\n/*\nPage: Main for the homepage\nThis page collects all the materials to fetch a movie.\nCreated by Sunil Park\n*/\n\nimport React, { useState } from \"react\";\nimport { StyledMain } from \"../../components/styles/Page.styled\";\nimport Content from \"../../components/Content\";\nimport PopupBackground from \"../../components/PopupBackground\";\nimport Features from \"./Features\";\nimport Lists from \"../../components/Lists\";\nimport { request, sortBy } from \"../../data/data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Main = _ref => {\n  _s();\n  let {\n    genreID\n  } = _ref;\n  // Data is stored to display the content of the movie.\n  const [setlectedMovieID, setSelectedMovieID] = useState(null);\n\n  // Filter movies.\n  const [sortByURL, setSortByURL] = useState(\"popular\");\n\n  // Set how to display the movie posters.\n  const [viewBy, setViewBy] = useState(true);\n  return /*#__PURE__*/_jsxDEV(StyledMain, {\n    children: [/*#__PURE__*/_jsxDEV(Features, {\n      sortByURL: sortByURL,\n      setSortByURL: str => setSortByURL(str),\n      viewBy: viewBy,\n      setViewBy: bool => setViewBy(bool)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Lists, {\n      pageParent: \"HOME\",\n      parameter: request[genreID].URL,\n      query: genreID + sortByURL,\n      path: sortBy[sortByURL],\n      viewBy: viewBy,\n      setSelectedMovieID: id => setSelectedMovieID(id)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), setlectedMovieID !== null && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Content, {\n        data: setlectedMovieID,\n        setSelectedMovieID: off => setSelectedMovieID(off)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PopupBackground, {\n        setSelectedMovieID: off => setSelectedMovieID(off)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n};\n_s(Main, \"OG5JMrPsIoR+kCo9EL2u2i0Djy4=\");\n_c = Main;\nexport default Main;\nvar _c;\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"names":["React","useState","StyledMain","Content","PopupBackground","Features","Lists","request","sortBy","Main","genreID","setlectedMovieID","setSelectedMovieID","sortByURL","setSortByURL","viewBy","setViewBy","str","bool","URL","id","off"],"sources":["C:/Users/teluk/Music/3-2/FEWD/Project/re-cinema-movie-main/src/pages/Home/Main.jsx"],"sourcesContent":["/*\nPage: Main for the homepage\nThis page collects all the materials to fetch a movie.\nCreated by Sunil Park\n*/\n\nimport React, { useState } from \"react\";\nimport { StyledMain } from \"../../components/styles/Page.styled\";\nimport Content from \"../../components/Content\";\nimport PopupBackground from \"../../components/PopupBackground\";\nimport Features from \"./Features\";\n\nimport Lists from \"../../components/Lists\";\n\nimport { request, sortBy } from \"../../data/data\";\n\nconst Main = ({ genreID }) => {\n  // Data is stored to display the content of the movie.\n  const [setlectedMovieID, setSelectedMovieID] = useState(null);\n\n  // Filter movies.\n  const [sortByURL, setSortByURL] = useState(\"popular\");\n\n  // Set how to display the movie posters.\n  const [viewBy, setViewBy] = useState(true);\n\n  return (\n    <StyledMain>\n      <Features\n        sortByURL={sortByURL}\n        setSortByURL={(str) => setSortByURL(str)}\n        viewBy={viewBy}\n        setViewBy={(bool) => setViewBy(bool)}\n      />\n\n      <Lists\n        pageParent=\"HOME\"\n        parameter={request[genreID].URL}\n        query={genreID + sortByURL}\n        path={sortBy[sortByURL]}\n        viewBy={viewBy}\n        setSelectedMovieID={(id) => setSelectedMovieID(id)}\n      />\n\n      {/* \n      If the movie ID value is obtained, the movie \n      information is displayed in the content. \n      */}\n      {setlectedMovieID !== null && (\n        <>\n          <Content\n            data={setlectedMovieID}\n            setSelectedMovieID={(off) => setSelectedMovieID(off)}\n          />\n          <PopupBackground\n            setSelectedMovieID={(off) => setSelectedMovieID(off)}\n          />\n        </>\n      )}\n      <span></span>\n    </StyledMain>\n  );\n};\n\nexport default Main;\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,UAAU,QAAQ,qCAAqC;AAChE,OAAOC,OAAO,MAAM,0BAA0B;AAC9C,OAAOC,eAAe,MAAM,kCAAkC;AAC9D,OAAOC,QAAQ,MAAM,YAAY;AAEjC,OAAOC,KAAK,MAAM,wBAAwB;AAE1C,SAASC,OAAO,EAAEC,MAAM,QAAQ,iBAAiB;AAAC;AAAA;AAElD,MAAMC,IAAI,GAAG,QAAiB;EAAA;EAAA,IAAhB;IAAEC;EAAQ,CAAC;EACvB;EACA,MAAM,CAACC,gBAAgB,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;;EAE7D;EACA,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,SAAS,CAAC;;EAErD;EACA,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAE1C,oBACE,QAAC,UAAU;IAAA,wBACT,QAAC,QAAQ;MACP,SAAS,EAAEY,SAAU;MACrB,YAAY,EAAGI,GAAG,IAAKH,YAAY,CAACG,GAAG,CAAE;MACzC,MAAM,EAAEF,MAAO;MACf,SAAS,EAAGG,IAAI,IAAKF,SAAS,CAACE,IAAI;IAAE;MAAA;MAAA;MAAA;IAAA,QACrC,eAEF,QAAC,KAAK;MACJ,UAAU,EAAC,MAAM;MACjB,SAAS,EAAEX,OAAO,CAACG,OAAO,CAAC,CAACS,GAAI;MAChC,KAAK,EAAET,OAAO,GAAGG,SAAU;MAC3B,IAAI,EAAEL,MAAM,CAACK,SAAS,CAAE;MACxB,MAAM,EAAEE,MAAO;MACf,kBAAkB,EAAGK,EAAE,IAAKR,kBAAkB,CAACQ,EAAE;IAAE;MAAA;MAAA;MAAA;IAAA,QACnD,EAMDT,gBAAgB,KAAK,IAAI,iBACxB;MAAA,wBACE,QAAC,OAAO;QACN,IAAI,EAAEA,gBAAiB;QACvB,kBAAkB,EAAGU,GAAG,IAAKT,kBAAkB,CAACS,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD,eACF,QAAC,eAAe;QACd,kBAAkB,EAAGA,GAAG,IAAKT,kBAAkB,CAACS,GAAG;MAAE;QAAA;QAAA;QAAA;MAAA,QACrD;IAAA,gBAEL,eACD;MAAA;MAAA;MAAA;IAAA,QAAa;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEjB,CAAC;AAAC,GA9CIZ,IAAI;AAAA,KAAJA,IAAI;AAgDV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module"}